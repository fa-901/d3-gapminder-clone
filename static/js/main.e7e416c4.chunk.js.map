{"version":3,"sources":["App.js","index.js"],"names":["App","chartArea","useRef","margin","left","right","top","bottom","area","r","Math","pow","PI","useEffect","width","current","clientWidth","height","document","documentElement","clientHeight","index","g","d3","append","attr","concat","x","domain","range","xAxis","y","yAxis","xAxisCall","tickValues","tickFormat","d","yAxisCall","call","text","yearLabel","t","duration","timer","legendGroup","map","v","i","toLowerCase","addLegend","update","data","json","countries","filter","income","life_exp","population","year","points","selectAll","country","exit","remove","enter","sqrt","merge","transition","continent","setInterval","length","startChart","react_default","a","createElement","className","href","id","src","ref","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"oNAKe,SAASA,IAEvB,IAAMC,EAAYC,iBAAO,MACnBC,EAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,IAAK,GAAIC,OAAQ,IAOvD,SAASC,EAAKC,GACb,OAAQC,KAAKC,IAAIF,EAAG,GAAKC,KAAKE,GAoI/B,OAzIAC,oBAAU,YAQV,WACC,IAAMC,EAAQb,EAAUc,QAAQC,YAAcb,EAAOC,KAAOD,EAAOE,MAClEY,EAAUC,SAASC,gBAAgBC,aAAe,GAAMjB,EAAOG,IAAMH,EAAOI,OAGzEc,EAAQ,EAERC,EAAIC,IAAU,eAChBC,OAAO,OACPC,KAAK,QAASX,EAAQX,EAAOC,KAAOD,EAAOE,OAC3CoB,KAAK,SAAUR,EAASd,EAAOG,IAAMH,EAAOI,QAC5CiB,OAAO,KACPC,KAAK,YALC,aAAAC,OAKyBvB,EAAOC,KALhC,MAAAsB,OAKyCvB,EAAOG,IALhD,MAOJqB,EAAIJ,MACNK,OAAO,CAAC,IAAK,MACbC,MAAM,CAAC,EAAGf,IAERgB,EAAQR,EAAEE,OAAO,KACnBC,KAAK,QAAS,UACdA,KAAK,YAFK,gBAAAC,OAEwBT,EAFxB,MAIRc,EAAIR,MACNK,OAAO,CAAC,EAAG,KACXC,MAAM,CAACZ,EAAQ,IAEbe,EAAQV,EAAEE,OAAO,KACnBC,KAAK,QAAS,UACdA,KAAK,YAFK,mBAIRQ,EAAYV,IAAcI,GAC5BO,WAAW,CAAC,IAAK,IAAM,MACvBC,WAAW,SAACC,GAAQ,UAAAV,OAAWU,KAE7BC,EAAYd,IAAYQ,GAE5BD,EAAMQ,KAAKL,GACXD,EAAMM,KAAKD,GAEEf,EAAEE,OAAO,QACpBe,KAAK,kBACLd,KAAK,IAAKX,EAAQ,GAClBW,KAAK,IAAMR,EAASd,EAAOI,OAAS,GACpCkB,KAAK,cAAe,UACpBA,KAAK,YAAa,QAClBA,KAAK,cAAe,UAETH,EAAEE,OAAO,QACpBC,KAAK,KAAOR,EAAS,GAErBQ,KAAK,KAAM,IACXA,KAAK,cAAe,UACpBA,KAAK,YAAa,QAClBA,KAAK,cAAe,UACpBA,KAAK,YAAa,eAClBc,KAAK,2BAhBP,IAkBIC,EAAYlB,EAAEE,OAAO,QACvBC,KAAK,IAAKX,GACVW,KAAK,IAAMR,EAAS,GACpBQ,KAAK,QAAS,cAEZgB,EAAIlB,MAAgBmB,SAASC,MA6ClC,SAAmBrB,EAAGR,EAAOG,GAC5B,IAAI2B,EAActB,EAAEE,OAAO,KAE3B,CAAC,OAAQ,SAAU,SAAU,YAAYqB,IAAI,SAACC,EAAGC,GAChD,IAAIhB,EAAQ,GAAJgB,EACRH,EAAYpB,OAAO,QACjBC,KAAK,QAAS,IACdA,KAAK,SAAU,IACfA,KAAK,IAAMX,EAASX,EAAOE,MAAQ,EAAM,GACzCoB,KAAK,QAJP,cAAAC,OAI8BoB,EAAEE,gBAC9BvB,KAAK,IAAKM,GACZa,EAAYpB,OAAO,QACjBC,KAAK,IAAMX,EAASX,EAAOE,MAAQ,GACnCoB,KAAK,IAAKM,EAAI,IACdN,KAAK,QAAS,UACdc,KAAKO,KAGRF,EAAYnB,KAAK,YAAjB,oBA7DAwB,CAAU3B,EAAGR,GAEb,IAAIoC,EAAS,WACZ,IAAIC,EAAOC,EAAK/B,GAAOgC,UACvBF,EAAOA,EAAKG,OAAO,SAACR,GACnB,SAASA,EAAES,SAAWT,EAAEU,YAGzB,IAAI/C,EAAIc,MACNK,OAAO,CAACL,IAAO4B,EAAM,SAACf,GAAQ,OAAOA,EAAEqB,aAAelC,IAAO4B,EAAM,SAACf,GAAQ,OAAOA,EAAEqB,eACrF5B,MAAM,CAACrB,EAAK,GAAIA,EAAK,MAEvBgC,EAAUD,KAAV,GAAAb,OAAkB0B,EAAK/B,GAAOqC,OAE9B,IAEIC,EAASrC,EAAEsC,UAAU,UACvBT,KAAKA,EAAM,SAACf,GAAQ,OAAOA,EAAEyB,UAE/BF,EAAOG,OAELrC,KAAK,KAAMM,EAAE,IACbgC,SAEFJ,EAAOK,QACLxC,OAAO,UACPC,KAAK,KAAM,SAAUW,GAAK,OAAOL,EAAE,KACnCN,KAAK,KAAM,SAAUW,GAAK,OAAOT,EAAES,EAAEmB,UACrC9B,KAAK,IAAK,SAAUW,GAAK,OAAO1B,KAAKuD,KAAKxD,EAAE2B,EAAEqB,YAAc/C,KAAKE,MACjEsD,MAAMP,GACNQ,WAAW1B,GACXhB,KAAK,QAAS,SAACW,GAAQ,oBAAAV,OAAqBU,EAAEgC,aAC9C3C,KAAK,KAAM,SAAUW,GAAK,OAAOL,EAAEK,EAAEoB,YACrC/B,KAAK,KAAM,SAAUW,GAAK,OAAOT,EAAES,EAAEmB,WAGxCc,YAAY,WACVhD,IAAW+B,EAAKkB,OAAS,EAAMjD,EAAQ,EAAIA,IAC5C6B,KAnGa,KAqGdA,IA/GAqB,KAyIAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAIJ,EAAAC,EAAAC,cAAA,OAAKG,GAAG,OAAOC,IAAI,oBAI1DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKG,GAAG,aAAaE,IAAK9E,MCxJ9B,IAAM+E,EAAc9D,SAAS+D,eAAe,QAC5CC,IAASC,OACPX,EAAAC,EAAAC,cAACF,EAAAC,EAAMW,WAAP,KACEZ,EAAAC,EAAAC,cAAC1E,EAAD,OAEFgF","file":"static/js/main.e7e416c4.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from 'd3';\r\nimport \"./styles.css\";\r\nimport json from './data/data.json'\r\n\r\nexport default function App() {\r\n\r\n\tconst chartArea = useRef(null);\r\n\tconst margin = { left: 50, right: 50, top: 10, bottom: 40 };\r\n\tconst timer = 800;\r\n\r\n\tuseEffect(() => {\r\n\t\tstartChart();\r\n\t});\r\n\r\n\tfunction area(r) {\r\n\t\treturn (Math.pow(r, 2) * Math.PI)\r\n\t}\r\n\r\n\tfunction startChart() {\r\n\t\tconst width = chartArea.current.clientWidth - margin.left - margin.right,\r\n\t\t\theight = (document.documentElement.clientHeight - 80) - margin.top - margin.bottom;\r\n\t\tconst timer = 800;\r\n\r\n\t\tvar index = 0;\r\n\r\n\t\tvar g = d3.select(\"#chart-area\")\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n\t\tvar x = d3.scaleLog()\r\n\t\t\t.domain([100, 200000])\r\n\t\t\t.range([0, width]);\r\n\r\n\t\tvar xAxis = g.append(\"g\")\r\n\t\t\t.attr(\"class\", \"x axis\")\r\n\t\t\t.attr('transform', `translate(0, ${height})`);\r\n\r\n\t\tvar y = d3.scaleLinear()\r\n\t\t\t.domain([0, 90])\r\n\t\t\t.range([height, 0]);\r\n\r\n\t\tvar yAxis = g.append(\"g\")\r\n\t\t\t.attr(\"class\", \"y axis\")\r\n\t\t\t.attr('transform', `translate(0, 0)`);\r\n\r\n\t\tvar xAxisCall = d3.axisBottom(x)\r\n\t\t\t.tickValues([400, 4000, 40000])\r\n\t\t\t.tickFormat((d) => { return `$${d}` })\r\n\r\n\t\tvar yAxisCall = d3.axisLeft(y);\r\n\r\n\t\txAxis.call(xAxisCall)\r\n\t\tyAxis.call(yAxisCall)\r\n\r\n\t\tvar xLabel = g.append('text')\r\n\t\t\t.text('GDP Per Capita')\r\n\t\t\t.attr('x', width / 2)\r\n\t\t\t.attr('y', (height + margin.bottom - 5))\r\n\t\t\t.attr('text-anchor', 'middle')\r\n\t\t\t.attr('font-size', '18px')\r\n\t\t\t.attr('text-anchor', 'middle')\r\n\r\n\t\tvar yLabel = g.append('text')\r\n\t\t\t.attr('x', -(height / 2))\r\n\t\t\t// .attr('y', -(margin.left - margin.right))\r\n\t\t\t.attr('y', -30)\r\n\t\t\t.attr('text-anchor', 'middle')\r\n\t\t\t.attr('font-size', '18px')\r\n\t\t\t.attr('text-anchor', 'middle')\r\n\t\t\t.attr('transform', 'rotate(-90)')\r\n\t\t\t.text('Life Expectancy (Years)')\r\n\r\n\t\tvar yearLabel = g.append('text')\r\n\t\t\t.attr('x', width)\r\n\t\t\t.attr('y', (height - 3))\r\n\t\t\t.attr('class', 'year-label');\r\n\r\n\t\tvar t = d3.transition().duration(timer / 2);\r\n\r\n\t\taddLegend(g, width, height);\r\n\r\n\t\tvar update = () => {\r\n\t\t\tlet data = json[index].countries;\r\n\t\t\tdata = data.filter((v) => {\r\n\t\t\t\treturn (!v.income || !v.life_exp) ? false : true\r\n\t\t\t});\r\n\r\n\t\t\tvar r = d3.scaleLinear()\r\n\t\t\t\t.domain([d3.min(data, (d) => { return d.population }), d3.max(data, (d) => { return d.population })])\r\n\t\t\t\t.range([area(5), area(25)]);\r\n\r\n\t\t\tyearLabel.text(`${json[index].year}`);\r\n\r\n\t\t\tlet radius = 5;\r\n\r\n\t\t\tvar points = g.selectAll(\"circle\")\r\n\t\t\t\t.data(data, (d) => { return d.country });\r\n\r\n\t\t\tpoints.exit()\r\n\t\t\t\t// .transition(t)\r\n\t\t\t\t.attr('cy', y(0))\r\n\t\t\t\t.remove();\r\n\r\n\t\t\tpoints.enter()\r\n\t\t\t\t.append(\"circle\")\r\n\t\t\t\t.attr(\"cy\", function (d) { return y(0) })\r\n\t\t\t\t.attr(\"cx\", function (d) { return x(d.income) })\r\n\t\t\t\t.attr('r', function (d) { return Math.sqrt(r(d.population) / Math.PI) })\r\n\t\t\t\t.merge(points)\r\n\t\t\t\t.transition(t)\r\n\t\t\t\t.attr(\"class\", (d) => { return `point fill-${d.continent}` })\r\n\t\t\t\t.attr(\"cy\", function (d) { return y(d.life_exp) })\r\n\t\t\t\t.attr(\"cx\", function (d) { return x(d.income) });\r\n\t\t}\r\n\r\n\t\tsetInterval(() => {\r\n\t\t\t(index === (json.length - 1)) ? index = 0 : index++;\r\n\t\t\tupdate();\r\n\t\t}, timer);\r\n\t\tupdate();\r\n\t}\r\n\r\n\tfunction addLegend(g, width, height) {\r\n\t\tvar legendGroup = g.append('g');\r\n\t\t\r\n\t\t['Asia', 'Africa', 'Europe', 'Americas'].map((v, i) => {\r\n\t\t\tlet y = i * 40\r\n\t\t\tlegendGroup.append('rect')\r\n\t\t\t\t.attr('width', 10)\r\n\t\t\t\t.attr('height', 10)\r\n\t\t\t\t.attr('x', (width + (margin.right / 2)) - 5)\r\n\t\t\t\t.attr('class', `point fill-${v.toLowerCase()}`)\r\n\t\t\t\t.attr('y', y)\r\n\t\t\tlegendGroup.append('text')\r\n\t\t\t\t.attr('x', (width + (margin.right / 2)))\r\n\t\t\t\t.attr('y', y + 25)\r\n\t\t\t\t.attr('class', 'legend')\r\n\t\t\t\t.text(v)\r\n\t\t});\r\n\r\n\t\tlegendGroup.attr('transform', `translate(0, 70)`)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<nav className=\"navbar navbar-default\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<a className=\"navbar-brand\" href=\"#\"><img id=\"logo\" src=\"img/logo.png\" /></a>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div id=\"chart-area\" ref={chartArea}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}